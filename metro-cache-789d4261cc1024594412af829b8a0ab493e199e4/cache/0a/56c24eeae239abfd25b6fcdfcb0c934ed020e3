__d(function (global, _require, module, exports, _dependencyMap) {
    Object.defineProperty(exports, "__esModule", {
        value: true
    });

    var _react2 = _require(_dependencyMap[0], "react");

    var _react3 = _interopRequireDefault(_react2);

    var _index = _require(_dependencyMap[1], "./node_modules/react-transform-hmr/lib/index.js");

    var _index2 = _interopRequireDefault(_index);

    var _jsxFileName = "/home/brandon/Documents/smartLock/Settings.js";

    var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

    var _reactNative = _require(_dependencyMap[2], "react-native");

    var _nativeBase = _require(_dependencyMap[3], "native-base");

    function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

    function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

    function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

    function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

    var _components = {
        Settings: {
            displayName: "Settings"
        }
    };

    var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
        filename: "/home/brandon/Documents/smartLock/Settings.js",
        components: _components,
        locals: [module],
        imports: [_react3.default]
    });

    function _wrapComponent(id) {
        return function (Component) {
            return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
        };
    }

    var Settings = _wrapComponent("Settings")(function (_React$Component) {
        _inherits(Settings, _React$Component);

        function Settings(props) {
            _classCallCheck(this, Settings);

            var _this = _possibleConstructorReturn(this, (Settings.__proto__ || Object.getPrototypeOf(Settings)).call(this, props));

            _this.state = {
                reserved: null,
                selected: {},
                detected: null
            };
            return _this;
        }

        _createClass(Settings, [{
            key: "refresh",
            value: function refresh() {
                var _this2 = this;

                _reactNative.AsyncStorage.getItem('selected', function (err, result) {
                    if (JSON.parse(result) != _this2.state.selected) {
                        _this2.setState({
                            selected: JSON.parse(result)
                        });
                    }
                });

                _reactNative.AsyncStorage.getItem('reserved', function (err, result) {
                    console.log(JSON.parse(result).status);

                    if (_this2.state.reserved != JSON.parse(result).status) {
                        _this2.setState({
                            reserved: JSON.parse(result).status
                        });
                    }
                });
            }
        }, {
            key: "componentDidMount",
            value: function componentDidMount() {
                this.refresh();
            }
        }, {
            key: "componentWillReceiveProps",
            value: function componentWillReceiveProps(props) {
                console.log('props', this.props);
            }
        }, {
            key: "render",
            value: function render() {
                var free = this.state.selected.free || "No rack occupied";
                var title = this.state.selected.title || "No rack occupied";
                var image = this.state.selected.image || "";
                var reserved = this.state.reserved;
                var detected = this.state.detected || "No rack occupied";
                var status = false;

                var image = _require(_dependencyMap[4], './src/images/logo.png');

                var comment = "";

                if (this.state.detected != null) {
                    status = true;

                    if (this.state.detected) {
                        comment = "Bike Detected";
                        image = _require(_dependencyMap[5], './src/images/check.png');
                    } else {
                        comment = "Bike Not Detected!";
                        image = _require(_dependencyMap[6], './src/images/redx.png');
                    }
                }

                return _react3.default.createElement(
                    _nativeBase.Content,
                    {
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 59
                        }
                    },
                    _react3.default.createElement(
                        _reactNative.Text,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 60
                            }
                        },
                        "Spots Available: ",
                        free
                    ),
                    _react3.default.createElement(
                        _reactNative.Text,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 61
                            }
                        },
                        "Location: ",
                        title
                    ),
                    _react3.default.createElement(
                        _reactNative.Text,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 62
                            }
                        },
                        "Reserved: ",
                        reserved ? 'yes' : 'no'
                    ),
                    _react3.default.createElement(_reactNative.Image, {
                        resizeMode: "contain",
                        source: image,
                        style: styles.logo,
                        __source: {
                            fileName: _jsxFileName,
                            lineNumber: 63
                        }
                    }),
                    _react3.default.createElement(
                        _reactNative.Text,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 67
                            }
                        },
                        comment
                    ),
                    _react3.default.createElement(
                        _nativeBase.Button,
                        {
                            __source: {
                                fileName: _jsxFileName,
                                lineNumber: 68
                            }
                        },
                        _react3.default.createElement(
                            _reactNative.Text,
                            {
                                __source: {
                                    fileName: _jsxFileName,
                                    lineNumber: 68
                                }
                            },
                            "Unlock"
                        )
                    )
                );
            }
        }]);

        return Settings;
    }(_react3.default.Component));

    exports.default = Settings;

    var styles = _reactNative.StyleSheet.create({
        logo: {
            width: 200,
            height: 200
        }
    });
});